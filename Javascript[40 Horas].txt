Rocket City - fazer o curso de js deles

Aula 1 - cliente/servidor
Aula 2 - algo
<marquee> # Eu Sou Bolsonaro! </marquee> - para deixar uma mensagem passando na tela
Aula 3 - referencias, livros, 
Aula 4 - <script> 
	window.alert("ALERTA")
	window.confirm("CONFIRMAÇÃO")
	window.prompt("INPUT DADOS")
window.alert("Minha Primeira Mensagem");
        confirmacao = window.confirm("Esta gostando do Js?");
        nome = window.prompt("Qual é o seu nome?");
        window.alert(nome);
        if (confirmacao = true) {
            window.alert("vc aceitou")
        }
</script>

Aula 5 - 
// comentario de uma linha;
/* */ - comentario de mais de uma linha;
var - para criar variaveis;
TIPOS DE DADOS PRIMITIVOS;
number - numero;
string - texto;
boolean - true ou false;
null - 
undefined - 
object - 
function - 

typeof - comando para descobrir o tipo do dado;

Aula 06 -
( + ) para concatenar;
window.prompt - o output é em string;
Number.parseInt(n) - para converter em inteiro;
Number.parseFloat(n) - para converter em float;
Number(n) - para não ter que expecificar se é inteiro ou float;

String(n) - para converter algo em string;
n.toString - para converter algo para string;

FORMATANDO STRINGS
`o aluno ${nome} com ${idade} anos tirou a nota ${nota}`;
`texto ${variavel} texto`;
var n = "Java Script";
n.length - para dar o tamanho da string;
n.toUpperCase() - para colocar em letras maiusculas;
n.toLowerCase() - para colocar em letras minusculas;
document.write() - para escrever na tela;
EX - document.write(`O seu nome em minusculo é ${nome.toLocaleLowerCase()}.`);
n.tofixed(2) - fixo duas casas depois do ponto para float;
n.replace("." , ",") - mudar o . por , nos numeros;
n.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'}) - comando para adicionar R$ na frente do dinheiro;

Aula 07 -
Operadores Aritmeticos
+ - soma;
- - diminui;
* - multiplica;
/ - divide;
% - resto da divisão inteira ex: 5 % 2 = 1;
** - potencia ex: 5 ** 2 = 25;

control + l - para limpar a tela do node.js

ORDEM DE PRECEDENCIA
primeiro () depois ** depois * / % depois + - ;

x ++ - para adicionar ao x mais 1
x -- - para diminuir ao x 1

Operadores Relacionais - retorna true ou false 
> - maior; 
< - menor;
>= - maior ou igual;
<= - menor ou igual;
== - igualdade;
!= - diferente;

Identidade 
5 == 5 = true
5 == "5" = true
5 === "5" = false
5 === 5 = true

Operadores Logicos
! - negação, muda se é false para true ou true para false
&& - conjunção, uma e outra, true e true = true, false e true = false
|| - disjunção, ou, true e true = true, false e true = true, false e flase = false

ORDEM DE PRECEDENCIA
() depois ** depois /
> depois < depois >=
! depois && depois ||

Operador Ternario
? seguido de : 
teste ? true : false
Ex: media >= 7.0 ? "Aprovado" : "Reprovado";
Ex: var res = n % 2 == 0 ? 5 : 9 - Se o resto da divisão de n / 2 é 0, recebe o valor 5;
Ex: var idade = r >= 18 ? "É de maior" : "É de menor";

Aula 09 - DOM
Document
Object
Model

Arvore DOM
MODELO HIERARQUICO
window - objeto aonde que esta tudo a tela
	location - local aonde esta a sua pagina
	document - documento atual que vc esta
		html - conteudo
			head - cabeça
				meta - dados importantes
				title - titulo
			bady - corpo 
				h1 - titlo
				p - paragrafo
					strong - para deixar em negrito
				div - caixa
	history - vai guardando de onde vc veio ou aonde vc vai

EX: window.document.write("CARAIAIIAIA");
EX: window.document.write(window.document.charset); - busca configuração da pagina
EX: window.document.write(window.navigator.appName); - mostra qual o navegador usado
EX: window.document.write(window.document.URL); - mostra qual a URL que vc esta acesando

SELECIONAR JAVASCRIPT MODOS

Por marca - getElementByTagName(); digamos pegar todos os h1
	EX: var p1 = window.document.getElementsByTagName("p")[0] - pega o primeiro p da pagina
	EX: window.document.write(p1.innerText); - pegou o texto do primeiro p sem formatação
	EX: window.document.write(p1.innerHTML); - pegou o texto do primeiro p com a formatação
	Ex: p1.style.color = "blue" - muda o texto para azul

Por ID - getElementById() - pega o elemento por ID
	EX: var d = window.document.getElementById("msg") - coloca a div que tem o ID "msg" para a variavel d
        EX: d.style.background = "green" - muda a cor de fundo da div
        EX: d.innerText = "Estou aprendendo" - muda o conteudo de texto da div
	EX: window.document.getElementById("msg").innerText = "OLÁ" - outro jeito de mudar o conteudo sem criar uma variavel

Por nome - getElmentsByName() - pega os elementos por nome
	EX: var d = window.document.getElementsByName("msg")[0] - coloca a div em uma variave no js
        EX: d.innerText = "CHUPA" - muda o texto da div

por classe - getElementByClassName() - pega o elemento pela classe
	EX: window.document.getElementByClassName("msg").innerText = "OLÁ" - mudar o conteudo sem criar variavel pela classe

por seletor - querySelector() - seleciona 1
              querySelectorAll() - seleciona mais de 1
# para IDs
. para Classes
	EX: var d = window.document.querySelector("#msg")
        EX: d.innerText = "CHUpa"

Aula 10 - Eventos DOM
mouseenter - quando o mouse entra na div
mouseout - quando o mouse sai da div
onmousemove - qaundo move o mouse na div
onmousedown - quando seguro o click no mouse
mouseup - quando é desapertado o click do mouse
click - quando é dado um aperto rapido no mouse(um click normal)
onload - quando é carregado a pagina EX: <body onload="carregar()">;


FUNÇÕES
function ação(algo){
}

EX: os bgl no html
<div id="area" onclick="clicar()" onmouseenter="entrar()" onmouseout="sair()" >Interaja...</div>
<script>
        function clicar(){
        window.document.getElementById("area").innerText = "Vc clicou"
        }
        function entrar(){
        window.document.getElementById("area").innerText = "Vc entrou"
        }
        function sair(){
        window.document.getElementById("area").innerText = "Vc saiu"
        }
    </script>


Ex: os bgl somente no js
<div id="area">Interaja...</div>
<script>
        var a = window.document.getElementById("area")
        a.addEventListener("click", clicar)
        a.addEventListener("mouseenter", entar)
        a.addEventListener("mouseout", sair)
        
        function clicar(){
        window.document.getElementById("area").innerText = "Vc clicou"
        window.document.getElementById("area").style.background = "red"
        }
        function entrar(){
        window.document.getElementById("area").innerText = "Vc entrou"
        }
        function sair(){
        window.document.getElementById("area").innerText = "Vc saiu"
        window.document.getElementById("area").style.background = "blue"
        }
    </script>

NODE.JS, extenção, vs code COMO USAR - no vs code, apertar tecla F8 em um arquivo .js
console.log("TEXTO") - para imprimir uma mensagem no console

Aula 11 - Condicionais
if(condição){
	ação
}else{
	ação
}


Aula 12 - Condiçoes parte 2

CONDIÇÃO ANINHADA
EX: 
if (condição){
}else if (condição) {
	console.log("Imprime algo no console")
}else{
}

EX: 
var agora = new Date() - cria uma variavel hora
var hora = agora.getHours() - passa os dados da variavel agora para a variavel data pegando as horas

CONDIÇÃO MÚLTIPLA

SWITCH - SO FUNCIONA COM VALORES PONTUAIS, OU STRINGS PONTUAIS, NÃO FUNCIONA COM INTERVALOS
EX: switch (expressão) {
	case valor1:
	break - precisa do break para sair do switch

	case valor2:
	break

	case valor3: 
	break

	default: - padão
	brak

}

Aula 13 - Repetições, se repete ate que a condição seja falsa

CONDIÇÃO TESTADA NO INICIO
while (condição) {
	"comando"
}

CONDIÇÃO TESTADA NO FINAL
do {
	"comando"
} while(condição)


Aula 14 - estrutura de repetição com variavel de controle

for (inicio; teste; incremento) {
	"comando"
}

EX: 

for (var c=1; c<=10; c++){
	"comando"
}

DEBUG
F5 - node.js - inpeção (variavel que quer ver o status atual) - f10 para ir executando aos poucos o programa.










